{#
/**
 * @file
 * tabs
 *
 * Available variables for tabs:
 *  - tabs_type [string | 'bootstrap', 'jquery']: Tabs javascript library.
 *  - nav_pills [bool]: Use bootstrap pills.
 *  - fill_justify [string | 'fill', 'justified']: Set tab fill.
 *  - tabs_id [string]: Component ID.
 *  - tabs_classes [array]: Additional component classes.
 *  - tabs_other_classes [string]: Additional component classes.
 *  - tabs_styles [array]: Additional component styles.
 *  - tabs_other_styles [string]: Additional component styles.
 *  - tabs_attributes [array]: Additional component attributes.
 *  - tabs_other_attributes [string]: Additional component attributes.
 *  - collapsible (string): Responsive tabs option to indicate whether tabs collapsible.
 *  - startCollapsed (string): Responsive tabs option to indicate whether tabs should start open or collapsed.
 *  - disabledTabs (string): Responsive tabs option indicate which tabs should be disabled.
 *  - activeTab (integer): Responsive tabs option to indicate if tab is active.
 *  - accordionTabElement (string): Responsive tabs option to set a HTML element template in which the accordion tab will be wrapped..
 *  - setHash (string): Responsive tabs option to set a reference to the tab in the URL hash.
 *  - rotate (string): Responsive tabs option to rotate through tabs.
 *  - event (string): Responsive tabs option to specify an event to activate a tab.
 *  - animation (string): Responsive tabs option to set a "fade" or "slide" animation on a tab.
 *  - animationQueue (string): Responsive tabs option to enable/disable the queueing of the animation.
 *  - duration (integer): Responsive tabs option set animation duration.
 *  - fluidHeight (string): Responsive tabs option to set adaptive height on tabs (I think....not seeing this in the docs now.  Where did I get this from?).
 *  - scrollToAccordion (string): Responsive tabs option to scroll to the accordion when opened.
 *  - scrollToAccordionOnLoad (string): Responsive tabs option to scroll to the accordion/tabs on page load.
 *  - scrollToAccordionOffset (string): Responsive tabs option to set an offest for the scroll feature.
 *  - vertical (boolean): Indicates whether the tabs should be vertical or horizontal.
 *  - tabs (array): Array of objects to define tabs.
 */
#}

{#
Responsive Tabs options in the json file should include string or integer values only. The disabledTabs option can be a comma deliniated string of integers that refer to the index of the tab. Be sure to set a unique tabs_id each tabs group on a page.
#}

{% set tabs_type = tabs_type|default('bootstrap') %}

{% set tabsId = [] %}
{% set alpha = 'abcdefghijklmnopqrstuvwxyz' %}
{% set num = '0123456789' %}
{% for i in 1..10 %}
  {% set char = random(alpha ~ alpha|upper ~ num ~ '-_') %}
  {% set tabsId = tabsId|merge([char]) %}
{% endfor %}
{% set tabsId = 'tabs_' ~ tabsId|join %}

{% set tabs_wrapper_classes = tabs_wrapper_classes|default([])|merge([
  'tabs-wrapper',
  vertical == true ? 'vertical',
  tabs_type,
  tabs_wrapper_other_classes,
]) | sort | join(' ') | trim %}

{% set tabs_wrapper_styles = tabs_wrapper_styles|default([])|merge([
  tabs_wrapper_other_styles,
]) | sort | join(' ') | trim %}

{% set tabs_wrapper_attributes = tabs_wrapper_attributes|default([])|merge([
  tabs_id ? 'id="' ~ tabs_id ~ '"' : 'id="' ~ tabsId ~ '"',
  tabs_wrapper_classes ? 'class="' ~ tabs_wrapper_classes ~ '"',
  tabs_wrapper_styles ? 'style="' ~ tabs_wrapper_styles ~ '"',
  disabledTabs ? 'data-disabledtabs="' ~ disabledTabs ~ '"',
  tabs_type == 'jquery' and collapsible ? 'data-collapsible="' ~ collapsible ~ '"',
  tabs_type == 'jquery' and startCollapsed ? 'data-startcollapsed="' ~ startCollapsed ~ '"',
  tabs_type == 'jquery' and activeTab is not empty ? 'data-activetab="' ~ activeTab|default(0) ~ '"',
  tabs_type == 'jquery' and accordionTabElement ? 'data-accordiontabelement="' ~ accordionTabElement ~ '"',
  tabs_type == 'jquery' and setHash ? 'data-sethash="' ~ setHash ~ '"',
  tabs_type == 'jquery' and rotate ? 'data-rotate="' ~ rotate ~ '"',
  tabs_type == 'jquery' and event ? 'data-event="' ~ event ~ '"',
  tabs_type == 'jquery' and animation ? 'data-animation="' ~ animation ~ '"',
  tabs_type == 'jquery' and animationQueue ? 'data-animationqueue="' ~ animationQueue ~ '"',
  tabs_type == 'jquery' and duration is not empty ? 'data-duration="' ~ duration|default(500) ~ '"',
  tabs_type == 'jquery' and fluidHeight ? 'data-fluidheight="' ~ fluidHeight ~ '"',
  tabs_type == 'jquery' and scrollToAccordion ? 'data-scrolltoaccordion="' ~ scrollToAccordion ~ '"',
  tabs_type == 'jquery' and scrollToAccordionOnLoad ? 'data-scrolltoaccordiononload="' ~ scrollToAccordionOnLoad ~ '"',
  tabs_type == 'jquery' and scrollToAccordionOffset ? 'data-scrolltoaccordionoffset="' ~ scrollToAccordionOffset ~ '"',
  tabs_type == 'jquery' and tabs_type == 'jquery' ? tabs_type,
  tabs_wrapper_other_attributes,
]) | sort | join(' ') | trim %}

{% set tabs_classes = tabs_classes|default([])|merge([
  tabs_type == 'jquery' ? 'tabs',
  tabs_type == 'jquery' ? 'clearfix',
  tabs_type == 'jquery' and vertical == true ? 'vertical',
  tabs_type == 'bootstrap' ? 'nav',
  tabs_type == 'bootstrap' and nav_pills == true ? 'nav-pills' : tabs_type == 'bootstrap' ? 'nav-tabs',
  tabs_type == 'bootstrap' and fill_justify ? 'nav-' ~ fill_justify,
  tabs_other_classes,
]) | sort | join(' ') | trim %}

{% set tabs_styles = tabs_styles|default([])|merge([
  tabs_other_styles,
]) | sort | join(' ') | trim %}

{% set tabs_attributes = tabs_attributes|default([])|merge([
  tabs_classes ? 'class="' ~ tabs_classes ~ '"',
  tabs_styles ? 'style="' ~ tabs_styles ~ '"',
  tabs_type == 'bootstrap' ? 'role="tablist"',
  tabs_other_attributes,
]) | sort | join(' ') | trim %}

<div {{ tabs_wrapper_attributes }}>
  {% set i = 0 %}
  {% if tabs_type == 'bootstrap' %}
    <nav>
  {% endif %}
    <{{ tabs_type == 'jquery' ? 'ul' : 'div' }} {{ tabs_attributes }}>
      {% block tabs_list %}
        {% for tab in tabs %}
          {% set i = i + 1 %}
          {% if tabs_type == 'bootstrap' %}
            {% set btn_id = tabs_id ? tabs_id ~ '--tab-' ~ i ~ '-link' : tabsId ~ '--tab-' ~ i ~ '-link' %}
            {% set btn_target = tabs_id ? tabs_id ~ '--tab-' ~ i : tabsId ~ '--tab-' ~ i %}
            {% include '@atoms/button/_button.tpl.twig' with {
              button_color: 'primary',
              button_text: tab.label,
              button_classes: [
                'nav-link',
                i == 1 ? 'active'
              ],
              button_id: btn_id,
              button_toggle: nav_pills == true ? 'pill' : 'tab',
              button_target: '#' ~ btn_target,
              button_role: 'tab',
              button_controls: btn_target,
            } %}
          {% elseif tabs_type == 'jquery' %}
            <li class="tabs__tab">
              <a href="#{{ tabs_id ? tabs_id : tabsId }}--tab-{{ i }}" class="tabs__tab-link">{{ tab.label }}</a>
            </li>
          {% endif %}
        {% endfor %}
      {% endblock %}
    </{{ tabs_type == 'jquery' ? 'ul' : 'div' }}>
  {% if tabs_type == 'bootstrap' %}
    </nav>
  {% endif %}
  {% block tabs_content %}
    {% set i = 0 %}
    {% if tabs_type == 'bootstrap' %}<div class="tab-content">{% endif %}
      {% for tab in tabs %}
        {% set i = i + 1 %}
        {% if tabs_type == 'bootstrap' %}
          {% set btn_id = tabs_id ? tabs_id ~ '--tab-' ~ i ~ '-link' : tabsId ~ '--tab-' ~ i ~ '-link' %}
        {% endif %}
        <div class="{{ tabs_type == 'bootstrap' ? 'tab-pane fade' : tabs_type == 'jquery' ? 'tabs__content-wrapper' }} {{ tabs_type == 'bootstrap' and i == 1 ? 'show active' }}" {{ tabs_type == 'bootstrap'? 'role="tabpanel" aria-labelledby="' ~ btn_id ~ '"' }} id="{{ tabs_id ? tabs_id : tabsId }}--tab-{{ i }}">
          <div class="{{ tabs_type == 'bootstrap' ? 'tab-pane-inner' : tabs_type == 'jquery' ? 'tabs__content' }}">
            {{ tab.content }}
          </div>
        </div>
      {% endfor %}
    {% if tabs_type == 'bootstrap' %}</div>{% endif %}
  {% endblock %}
</div>
