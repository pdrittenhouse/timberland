{#
/**
 * @file
 * posts-loop~carousel
 *   Posts loop with carousel pattern.
 *
 * Available variables:
 *  - posts: Array of post objects
 *  - fields: Block field data
 */
#}
    {% if fields.pattern == 'carousel' %}

      {# Slider Styles #}
      {% set slider_width = fields.slider.width.width['width']['value'] >= 0 ? 'width: ' ~ fields.slider.width.width['width']['value']  ~ fields.slider.width.width['width']['unit'] ~  ';' %}
      {% set slider_min_width = fields.slider.width.width['min_width'] >= 0 ? 'min-width: ' ~ fields.slider.width.width['min_width']  ~ 'px;' %}
      {% set slider_max_width = fields.slider.width.width['max_width'] >= 0 ? 'max-width: ' ~ fields.slider.width.width['max_width']  ~ 'px;' %}
      {% set slider_margin_top = fields.slider.margin['margin']['top']['auto'] == true ? 'margin-top: auto;' : parent_block_data['name'] != 'acf/group' and fields.slider.margin['margin']['top']['top'] >= 0 ? 'margin-top: ' ~ fields.slider.margin['margin']['top']['top'] ~ 'px;' %}
      {% set slider_margin_bottom = fields.slider.margin['margin']['bottom']['auto'] == true ? 'margin-bottom: auto;' : parent_block_data['name'] != 'acf/group' and fields.slider.margin['margin']['bottom']['bottom'] >= 0 ? 'margin-bottom: ' ~ fields.slider.margin['margin']['bottom']['bottom'] ~ 'px;' %}
      {% set slider_margin_left = fields.slider.margin['margin']['left']['auto'] == true ? 'margin-left: auto;' : parent_block_data['name'] != 'acf/group' and fields.slider.margin['margin']['left']['left'] >= 0 ? 'margin-left: ' ~ fields.slider.margin['margin']['left']['left'] ~ 'px;' %}
      {% set slider_margin_right = fields.slider.margin['margin']['right']['auto'] == true ? 'margin-right: auto;' : parent_block_data['name'] != 'acf/group' and fields.slider.margin['margin']['right']['right'] >= 0 ? 'margin-right: ' ~ fields.slider.margin['margin']['right']['right'] ~ 'px;' %}
      {% set slider_padding_top  = fields.slider.padding['padding']['top'] >= 0 ? 'padding-top: ' ~ fields.slider.padding['padding']['top'] ~ 'px;' %}
      {% set slider_padding_bottom = fields.slider.padding['padding']['bottom'] >= 0 ? 'padding-bottom: ' ~ fields.slider.padding['padding']['bottom'] ~ 'px;' %}
      {% set slider_padding_left = fields.slider.padding['padding']['left'] >= 0 ? 'padding-left: ' ~ fields.slider.padding['padding']['left'] ~ 'px;' %}
      {% set slider_padding_right = fields.slider.padding['padding']['right'] >= 0 ? 'padding-right: ' ~ fields.slider.padding['padding']['right'] ~ 'px;' %}

      {% set slider_classes = slider_classes|default([])|merge([
        'posts-loop--slider',
        fields.slider.equal_height_slides == true ? 'equal-height-slides'
      ]) | sort | join(' ') | trim %}

      {# Slide Styles #}
      {% set slide_bg_image = fields.slide.bg_image['bg_image_type'] == 'file' and fields.slide.bg_image['bg_image']['url'] ? "background-image: url('" ~ fields.slide.bg_image['bg_image']['url'] ~ "');" : fields.slide.bg_image['bg_image_type'] == 'url' and fields.slide.bg_image['bg_image_url'] ? "background-image: url('" ~ fields.slide.bg_image['bg_image_url'] ~ "');" %}
      {% set slide_bg_image_size = fields.slide.bg_image['bg_size'] == 'custom' and fields.slide.bg_image['custom_bg_size'] ? 'background-size: ' ~ fields.slide.bg_image['custom_bg_size'] ~ ';' : fields.slide.bg_image['bg_size'] ? 'background-size: ' ~ fields.slide.bg_image['bg_size'] ~ ';' %}
      {% set slide_bg_hor_pos = fields.slide.bg_image['bg_horizontal_position'] == 'custom' ? fields.slide.bg_image['custom_bg_horizontal_position'] : fields.slide.bg_image['bg_horizontal_position'] ? fields.slide.bg_image['bg_horizontal_position'] %}
      {% set slide_bg_ver_pos = fields.slide.bg_image['bg_vertical_position'] == 'custom' ? fields.slide.bg_image['custom_bg_vertical_position'] : fields.slide.bg_image['bg_vertical_position'] ? fields.slide.bg_image['bg_vertical_position'] %}
      {% set slide_bg_position = slide_bg_hor_pos or slide_bg_ver_pos ? 'background-position: ' ~ slide_bg_hor_pos ~ ' ' ~ slide_bg_ver_pos ~ ';' %}
      {% set slide_bg_repeat = fields.slide.bg_image['bg_repeat'] ? 'background-repeat: ' ~ fields.slide.bg_image['bg_repeat'] ~ ';' %}
      {% set slide_bg_attachment = fields.slide.bg_image['bg_attachment'] ? 'background-attachment: ' ~ fields.slide.bg_image['bg_attachment'] ~ ';' %}
      {% set slide_bg_color = fields.slide.bg_color['bg_color'] == 'custom' ? 'background-color: ' ~ fields.slide.bg_color['bg_custom_color'] ~ ';' %}
      {% set slide_padding_top  = fields.slide['padding']['padding']['top'] is not empty ? 'padding-top: ' ~ fields.slide['padding']['padding']['top'] ~ 'px;' %}
      {% set slide_padding_bottom = fields.slide['padding']['padding']['bottom'] is not empty ? 'padding-bottom: ' ~ fields.slide['padding']['padding']['bottom'] ~ 'px;' %}
      {% set slide_padding_left = fields.slide['padding']['padding']['left'] is not empty ? 'padding-left: ' ~ fields.slide['padding']['padding']['left'] ~ 'px;' %}
      {% set slide_padding_right = fields.slide['padding']['padding']['right'] is not empty ? 'padding-right: ' ~ fields.slide['padding']['padding']['right'] ~ 'px;' %}
      {% set slide_border_top_width = fields.slide['border']['top']['width'] is not empty ? 'border-top-width: ' ~ fields.slide['border']['top']['width'] ~ 'px;' %}
      {% set slide_border_top_style = fields.slide['border']['top']['style'] ? 'border-top-style: ' ~ fields.slide['border']['top']['style'] ~ ';' %}
      {% set slide_border_top_color = fields.slide['border']['top']['color'] == 'custom' and fields.slide['border']['top']['custom_color'] ? 'border-top-color: ' ~ fields.slide['border']['top']['custom_color'] ~ ';' : fields.slide['border']['top']['color'] == 'palette' and fields.slide['border']['top']['theme_color'] ? 'border-top-color: var(--' ~ fields.slide['border']['top']['theme_color'] ~ ');' %}
      {% set slide_border_bottom_width = fields.slide['border']['bottom']['width'] is not empty ? 'border-bottom-width: ' ~ fields.slide['border']['bottom']['width'] ~ 'px;' %}
      {% set slide_border_bottom_style = fields.slide['border']['bottom']['style'] ? 'border-bottom-style: ' ~ fields.slide['border']['bottom']['style'] ~ ';' %}
      {% set slide_border_bottom_color = fields.slide['border']['bottom']['color'] == 'custom' and fields.slide['border']['bottom']['custom_color'] ? 'border-bottom-color: ' ~ fields.slide['border']['bottom']['custom_color'] ~ ';' : fields.slide['border']['bottom']['color'] == 'palette' and fields.slide['border']['bottom']['theme_color'] ? 'border-bottom-color: var(--' ~ fields.slide['border']['bottom']['theme_color'] ~ ');' %}
      {% set slide_border_left_width = fields.slide['border']['left']['width'] is not empty ? 'border-left-width: ' ~ fields.slide['border']['left']['width'] ~ 'px;' %}
      {% set slide_border_left_style = fields.slide['border']['left']['style'] ? 'border-left-style: ' ~ fields.slide['border']['left']['style'] ~ ';' %}
      {% set slide_border_left_color = fields.slide['border']['left']['color'] == 'custom' and fields.slide['border']['left']['custom_color'] ? 'border-left-color: ' ~ fields.slide['border']['left']['custom_color'] ~ ';' : fields.slide['border']['left']['color'] == 'palette' and fields.slide['border']['left']['theme_color'] ? 'border-left-color: var(--' ~ fields.slide['border']['left']['theme_color'] ~ ');' %}
      {% set slide_border_right_width = fields.slide['border']['right']['width'] is not empty ? 'border-right-width: ' ~ fields.slide['border']['right']['width'] ~ 'px;' %}
      {% set slide_border_right_style = fields.slide['border']['right']['style'] ? 'border-right-style: ' ~ fields.slide['border']['right']['style'] ~ ';' %}
      {% set slide_border_right_color = fields.slide['border']['right']['color'] == 'custom' and fields.slide['border']['right']['custom_color'] ? 'border-right-color: ' ~ fields.slide['border']['right']['custom_color'] ~ ';' : fields.slide['border']['right']['color'] == 'palette' and fields.slide['border']['right']['theme_color'] ? 'border-right-color: var(--' ~ fields.slide['border']['right']['theme_color'] ~ ');' %}
      {% set slide_border_top_left_radius = fields.slide['border_radius']['top_left'] is not empty ? 'border-top-left-radius: ' ~ fields.slide['border_radius']['top_left'] ~ 'px;' %}
      {% set slide_border_top_right_radius = fields.slide['border_radius']['top_right'] is not empty ? 'border-top-right-radius: ' ~ fields.slide['border_radius']['top_right'] ~ 'px;' %}
      {% set slide_border_bottom_left_radius = fields.slide['border_radius']['bottom_left'] is not empty ? 'border-bottom-left-radius: ' ~ fields.slide['border_radius']['bottom_left'] ~ 'px;' %}
      {% set slide_border_bottom_right_radius = fields.slide['border_radius']['bottom_right'] is not empty ? 'border-bottom-right-radius: ' ~ fields.slide['border_radius']['bottom_right'] ~ 'px;' %}
      {% set slide_box_shadow_color = fields.slide['box_shadow']['color']['color'] == 'palette' and fields.slide['box_shadow']['color']['theme_color'] ? 'var(--' ~ fields.slide['box_shadow']['color']['theme_color'] ~ ')' : fields.slide['box_shadow']['color']['color'] == 'custom' and fields.slide['box_shadow']['color']['custom_color'] ? fields.slide['box_shadow']['color']['custom_color'] %}
      {% set slide_box_shadow_inset = fields.slide['box_shadow']['inset'] == true ? 'inset' %}
      {% set slide_box_shadow = fields.slide['box_shadow']['horizontal_offset'] is not empty or fields.slide['box_shadow']['vertical_offset'] is not empty or fields.slide['box_shadow']['blur'] is not empty or fields.slide['box_shadow']['spread'] is not empty or slide_box_shadow_color or slide_box_shadow_inset == true ? 'box-shadow: ' ~ fields.slide['box_shadow']['horizontal_offset'] ~ 'px ' ~ fields.slide['box_shadow']['vertical_offset'] ~ 'px ' ~ fields.slide['box_shadow']['blur'] ~ 'px ' ~ fields.slide['box_shadow']['spread'] ~ 'px ' ~ slide_box_shadow_color ~ ' ' ~ slide_box_shadow_inset ~ ';' %}
      {% set slide_margin_left = fields.slide.margin['margin']['left'] is not empty ? 'margin-left: ' ~ fields.slide.margin['margin']['left'] ~ 'px;' %}
      {% set slide_margin_right = fields.slide.margin['right'] is not empty ? 'margin-right: ' ~ fields.slide.margin['right'] ~ 'px;' %}

      {# Set and count posts for slides #}
      {% set slideCount = [] %}
      {% for post in posts %}
        {% set slideCount = slideCount|merge([{
          slide: i,
          active: loop.first ? true
        }]) %}
      {% endfor %}

      {# Slide Classes #}
      {% set slide_classes = slide_classes|default([])|merge([
        'posts-loop--slide',
        'slide',
        fields.slider.slider == 'bootstrap' ? 'carousel-item',
        fields.slider.slider == 'flickity' ? 'carousel-cell',
        fields.slider.slider == 'bootstrap' and fields.active == true ? 'active',
        fields.slider.slider == 'slick' ? 'slick-slide',
        fields.slide.slide_layout.slide_layout != 'default' ? 'slide-' ~ fields.slide_layout.slide_layout,
        fields.slide.bg_color['bg_color'] == 'palette' and fields.slide.bg_color['bg_theme_color'] ? 'bg-' ~ fields.slide.bg_color['bg_theme_color'],
        fields.full_height_cards == true ? 'full-height-cards'
      ]) | sort | join(' ') | trim %}

      {# Slide Attributes #}
      {% set slide_attributes = slide_attributes|default([])|merge([
        slide_bg_image or slide_bg_image_size or slide_bg_position or slide_bg_repeat or slide_bg_attachment or slide_bg_color or slide_padding_top or slide_padding_bottom or slide_padding_left or slide_padding_right or slide_border_top_width or slide_border_top_style or slide_border_top_color or slide_border_bottom_width or slide_border_bottom_style or slide_border_bottom_color or slide_border_left_width or slide_border_left_style or slide_border_left_color or slide_border_right_width or slide_border_right_style or slide_border_right_color or slide_border_top_left_radius or slide_border_top_right_radius or slide_border_bottom_left_radius or slide_border_bottom_right_radius or slide_box_shadow or slide_margin_left or slide_margin_right ? 'style="' ~ slide_bg_image ~ slide_bg_image_size ~ slide_bg_position ~ slide_bg_repeat ~ slide_bg_attachment ~ slide_bg_color ~ slide_padding_top ~ slide_padding_bottom ~ slide_padding_left ~ slide_padding_right ~ slide_border_top_width ~ slide_border_top_style ~ slide_border_top_color ~ slide_border_bottom_width ~ slide_border_bottom_style ~ slide_border_bottom_color ~ slide_border_left_width ~ slide_border_left_style ~ slide_border_left_color ~ slide_border_right_width ~ slide_border_right_style ~ slide_border_right_color ~ slide_border_top_left_radius ~ slide_border_top_right_radius ~ slide_border_bottom_left_radius ~ slide_border_bottom_right_radius ~ slide_box_shadow ~ slide_margin_left ~ slide_margin_right ~ '"'
      ]) | sort | join(' ') | trim %}

      {% if fields.include_cards == true %}

        {% if fields.slider.slider == 'bootstrap' %}
          {% embed '@molecules/carousel/_carousel.tpl.twig' with {
            carousel_id: block['anchor'],
            carousel_classes: [
              slider_classes
            ],
            carousel_attributes: [
              slider_width or slider_min_width or slider_max_width or slider_margin_top or slider_margin_bottom or slider_margin_left or slider_margin_right or slider_padding_top or slider_padding_bottom or slider_padding_left or slider_padding_right ? 'style="' ~ slider_width ~ slider_min_width ~ slider_max_width ~ slider_margin_top ~ slider_margin_bottom ~ slider_margin_left ~ slider_margin_right ~ slider_padding_top ~ slider_padding_bottom ~ slider_padding_left ~ slider_padding_right ~ '"'
            ],
            arrows: fields.slider.arrows,
            indicators: fields.slider.dots,
            crossfade: fields.slider.fade,
            dark: fields.slider.dark,
            touch: fields.slider.swipe == true ? 'true',
            keyboard: fields.slider.keyboard == true ? 'true' : 'false',
            wrap: fields.slider.loop == true ? 'true' : 'false',
            pause: fields.slider.pause_on_hover == true ? 'hover' : 'false',
            interval: fields.slider.autoplay == true and fields.slider.autoplay_speed ? fields.slider.autoplay_speed,
            ride: fields.slider.autoplay == true and fields.slider.auto_start == true ? 'carousel' : fields.slider.autoplay == true ? 'true' : 'false',
            slides: slideCount
          } %}
            {% block carousel_slides %}

              {% for post in posts %}
                {# Categories #}
                {% if post.categories %}
                  {% set catArr = [] %}
                  {% for category in post.categories %}
                    {% set catArr = catArr | merge([category.name]) %}
                  {% endfor %}
                {% endif %}

                <div class="{{ slide_classes }} {{ fields.slider.initial_slide == loop.index0 ? 'active' }}" {{ slide_attributes }}>
                  {# Include shared card element #}
                  {% set card_attributes = [] %}
                  {% if fields.include_modals == true %}
                    {% set card_attributes = card_attributes|merge(['data-bs-toggle="modal"', 'data-bs-target="#' ~ post.slug ~ '"']) %}
                  {% endif %}
                  {% if catArr | length > 0 %}
                    {% set card_attributes = card_attributes|merge(['data-categories="' ~ catArr | sort | join(', ') | trim ~ '"']) %}
                  {% endif %}
                  
                  {% include 'blocks/posts-loop/elements/_card.twig' with {
                    post: post,
                    fields: fields,
                    parent_block_data: {'name': 'acf/slider'},
                    additional_attributes: card_attributes
                  } %}
                </div>
              {% endfor %}

            {% endblock carousel_slides %}
          {% endembed %}
        {% elseif fields.slider.slider == 'flickity' %}
          {% embed '@molecules/flickity-carousel/_flickity-carousel.tpl.twig' with {
            slide_width: slide_width,
            contain: fields.slider.contain,
            wrapAround: fields.slider.loop,
            autoPlay: fields.slider.autoplay == true and fields.slider.autoplay_speed ? fields.slider.autoplay_speed,
            pauseAutoPlayOnHover: fields.slider.pause_on_hover,
            prevNextButtons: fields.slider.arrows,
            pageDots: fields.slider.dots,
            draggable: fields.slider.swipe,
            freeScroll: fields.slider.free_scroll,
            groupCells: fields.slider.group_cells,
            adaptiveHeight: fields.slider.adapt_height,
            rightToLeft: fields.slider.right_to_left,
            accessibility: fields.slider.keyboard,
            setGallerySize: fields.slider.gallery_size,
            resize: fields.slider.resize,
            cellAlign: fields.slider.alignment,
            slides: slideCount,
            flickity_carousel_classes: [
              slider_classes
            ],
            flickity_carousel_attributes: [
              slider_width or slider_min_width or slider_max_width or slider_margin_top or slider_margin_bottom or slider_margin_left or slider_margin_right or slider_padding_top or slider_padding_bottom or slider_padding_left or slider_padding_right ? 'style="' ~ slider_width ~ slider_min_width ~ slider_max_width ~ slider_margin_top ~ slider_margin_bottom ~ slider_margin_left ~ slider_margin_right ~ slider_padding_top ~ slider_padding_bottom ~ slider_padding_left ~ slider_padding_right ~ '"'
            ]
          } %}
            {% block slides %}
              {% for post in posts %}
                {# Categories #}
                {% if post.categories %}
                  {% set catArr = [] %}
                  {% for category in post.categories %}
                    {% set catArr = catArr | merge([category.name]) %}
                  {% endfor %}
                {% endif %}

                <div class="{{ slide_classes }}" {{ slide_attributes }}>
                  {# Include shared card element #}
                  {% set card_attributes = [] %}
                  {% if fields.include_modals == true %}
                    {% set card_attributes = card_attributes|merge(['data-bs-toggle="modal"', 'data-bs-target="#' ~ post.slug ~ '"']) %}
                  {% endif %}
                  {% if catArr | length > 0 %}
                    {% set card_attributes = card_attributes|merge(['data-categories="' ~ catArr | sort | join(', ') | trim ~ '"']) %}
                  {% endif %}
                  
                  {% include 'blocks/posts-loop/elements/_card.twig' with {
                    post: post,
                    fields: fields,
                    parent_block_data: {'name': 'acf/slider'},
                    additional_attributes: card_attributes
                  } %}
                </div>
              {% endfor %}

            {% endblock slides %}
          {% endembed %}
        {% elseif fields.slider.slider == 'slick' %}
          {% embed '@molecules/slick-carousel/_slick-carousel.tpl.twig' with {
            slide_width: slide_width,
            slides_to_show: fields.slider.slides_to_show,
            slides_to_scroll: fields.slider.slides_to_scroll,
            infinite: fields.slider.loop,
            speed: fields.slider.animation_speed,
            autoplay: fields.slider.autoplay,
            autoplay_speed: fields.slider.autoplay_speed,
            pause_on_hover: fields.slider.pause_on_hover,
            pause_on_focus: fields.slider.pause_on_focus,
            css_ease: fields.slider.css_ease,
            ease: fields.slider.easing,
            arrows: fields.slider.arrows,
            dots: fields.slider.dots,
            draggable: fields.slider.swipe,
            swipe: fields.slider.swipe,
            touch_move: fields.slider.swipe,
            swipe_to_slide: fields.slider.swipe_to_slide,
            touch_threshold: fields.slider.drag_threshold,
            edge_friction: fields.slider.edge_friction,
            center_mode: fields.slider.center_mode,
            center_padding: fields.slider.center_padding,
            variable_width: fields.slider.variable_width,
            adaptive_height: fields.slider.adapt_height,
            rows: fields.slider.rows,
            slides_per_row: fields.slider.slides_per_row,
            vertical: fields.slider.vertical,
            vertical_swiping: fields.slider.vertical_swiping,
            rtl: fields.slider.right_to_left,
            accessibility: fields.slider.keyboard,
            focus_on_select: fields.slider.focus_on_select,
            lazy_load: fields.slider.lazy_load,
            fade: fields.slider.fade,
            use_css: fields.slider.use_css,
            use_transform: fields.slider.use_transform,
            edge_friction: fields.slider.edge_friction,
            touch_threshold: fields.slider.drag_threshold,
            easing: fields.slider.easing,
            css_ease: fields.slider.css_ease,
            asNavFor: fields.slider.as_nav_for,
            responsive: fields.slider.responsive,
            slides: slideCount,
            slick_carousel_classes: [
              slider_classes
            ],
            slick_carousel_attributes: [
              slider_width or slider_min_width or slider_max_width or slider_margin_top or slider_margin_bottom or slider_margin_left or slider_margin_right or slider_padding_top or slider_padding_bottom or slider_padding_left or slider_padding_right ? 'style="' ~ slider_width ~ slider_min_width ~ slider_max_width ~ slider_margin_top ~ slider_margin_bottom ~ slider_margin_left ~ slider_margin_right ~ slider_padding_top ~ slider_padding_bottom ~ slider_padding_left ~ slider_padding_right ~ '"'
            ]
          } %}
            {% block slides %}
              {% for post in posts %}
                {# Categories #}
                {% if post.categories %}
                  {% set catArr = [] %}
                  {% for category in post.categories %}
                    {% set catArr = catArr | merge([category.name]) %}
                  {% endfor %}
                {% endif %}

                <div class="{{ slide_classes }}" {{ slide_attributes }}>
                  {# Include shared card element #}
                  {% set card_attributes = [] %}
                  {% if fields.include_modals == true %}
                    {% set card_attributes = card_attributes|merge(['data-bs-toggle="modal"', 'data-bs-target="#' ~ post.slug ~ '"']) %}
                  {% endif %}
                  {% if catArr | length > 0 %}
                    {% set card_attributes = card_attributes|merge(['data-categories="' ~ catArr | sort | join(', ') | trim ~ '"']) %}
                  {% endif %}
                  
                  {% include 'blocks/posts-loop/elements/_card.twig' with {
                    post: post,
                    fields: fields,
                    parent_block_data: {'name': 'acf/slider'},
                    additional_attributes: card_attributes
                  } %}
                </div>
              {% endfor %}

            {% endblock slides %}
          {% endembed %}
        {% endif %}

      {% else %}

        {% if fields.slider.slider == 'bootstrap' %}
          {% embed '@molecules/carousel/_carousel.tpl.twig' with {
            carousel_id: block['anchor'],
            carousel_classes: [
              slider_classes
            ],
            carousel_attributes: [
              slider_width or slider_min_width or slider_max_width or slider_margin_top or slider_margin_bottom or slider_margin_left or slider_margin_right or slider_padding_top or slider_padding_bottom or slider_padding_left or slider_padding_right ? 'style="' ~ slider_width ~ slider_min_width ~ slider_max_width ~ slider_margin_top ~ slider_margin_bottom ~ slider_margin_left ~ slider_margin_right ~ slider_padding_top ~ slider_padding_bottom ~ slider_padding_left ~ slider_padding_right ~ '"'
            ],
            arrows: fields.slider.arrows,
            indicators: fields.slider.dots,
            crossfade: fields.slider.fade,
            dark: fields.slider.dark,
            touch: fields.slider.swipe == true ? 'true',
            keyboard: fields.slider.keyboard == true ? 'true' : 'false',
            wrap: fields.slider.loop == true ? 'true' : 'false',
            pause: fields.slider.pause_on_hover == true ? 'hover' : 'false',
            interval: fields.slider.autoplay == true and fields.slider.autoplay_speed ? fields.slider.autoplay_speed,
            ride: fields.slider.autoplay == true and fields.slider.auto_start == true ? 'carousel' : fields.slider.autoplay == true ? 'true' : 'false',
            slides: slideCount
          } %}
            {% block carousel_slides %}
              {% for post in posts %}
                {# Categories #}
                {% if post.categories %}
                  {% set catArr = [] %}
                  {% for category in post.categories %}
                    {% set catArr = catArr | merge([category.name]) %}
                  {% endfor %}
                {% endif %}

                <div class="{{ slide_classes }} {{ fields.slider.initial_slide == loop.index0 ? 'active' }}" {{ slide_attributes }} {{ catArr | length > 0 ? 'data-categories="' ~ catArr | sort | join(', ') | trim ~ '"' }}>
                  {% if fields.link_items == true %}
                    <a class="posts-loop--post" href="{{ post.link }}">
                  {% elseif fields.include_modals == true %}
                    <a class="posts-loop--post" href="javascript:void(0);" data-bs-toggle="modal" data-bs-target="#{{ post.slug }}">
                  {% else %}
                    <div class="posts-loop--post">
                  {% endif %}

                    {% for element in fields.posts_query_layout %}
                      {% if element.acf_fc_layout == 'featured_image' and post.thumbnail.src %}
                        {% include 'blocks/posts-loop/elements/_featured-image.twig' %}
                      {% elseif element.acf_fc_layout == 'post_title' and post.post_title %}
                        {% include 'blocks/posts-loop/elements/_post-title.twig' %}
                      {% elseif element.acf_fc_layout == 'post_excerpt' and post.post_excerpt %}
                        {% include 'blocks/posts-loop/elements/_post-excerpt.twig' %}
                      {% elseif element.acf_fc_layout == 'post_content' and post.content %}
                        {% include 'blocks/posts-loop/elements/_post-content.twig' %}
                      {% elseif element.acf_fc_layout == 'post_author' and post.authors %}
                        {% include 'blocks/posts-loop/elements/_post-author.twig' %}
                      {% elseif element.acf_fc_layout == 'post_date' and post.date %}
                        {% include 'blocks/posts-loop/elements/_post-date.twig' %}
                      {% elseif element.acf_fc_layout == 'post_modified' and post.modified_date %}
                        {% include 'blocks/posts-loop/elements/_post-modified.twig' %}
                      {% elseif element.acf_fc_layout == 'post_type' and post.type %}
                        {% include 'blocks/posts-loop/elements/_post-type.twig' %}
                      {% elseif element.acf_fc_layout == 'comment_count' and post.comment_count %}
                        {% include 'blocks/posts-loop/elements/_post-comment-count.twig' %}
                      {% elseif element.acf_fc_layout == 'terms' and post.terms is not empty %}
                        {% include 'blocks/posts-loop/elements/_post-terms.twig' %}
                      {% elseif element.acf_fc_layout == 'categories' and post.categories %}
                        {% include 'blocks/posts-loop/elements/_post-categories.twig' %}
                      {% elseif element.acf_fc_layout == 'tags' and post.tags %}
                        {% include 'blocks/posts-loop/elements/_post-tags.twig' %}
                      {% elseif element.acf_fc_layout == 'post_parent' and post.parent %}
                        {% include 'blocks/posts-loop/elements/_post-parent.twig' %}
                      {% elseif element.acf_fc_layout == 'children' and post.children %}
                        {% include 'blocks/posts-loop/elements/_post-children.twig' %}
                      {% elseif element.acf_fc_layout == 'link' and post.link %}
                        {% include 'blocks/posts-loop/elements/_post-link.twig' %}
                      {% endif %}
                    {% endfor %}

                  {% if fields.link_items == true or fields.include_modals == true %}
                    </a>
                  {% else %}
                    </div>
                  {% endif %}
                </div>
              {% endfor %}
            {% endblock carousel_slides %}
          {% endembed %}
        {% elseif fields.slider.slider == 'flickity' %}
          {% embed '@molecules/flickity-carousel/_flickity-carousel.tpl.twig' with {
            slide_width: slide_width,
            contain: fields.slider.contain,
            wrapAround: fields.slider.loop,
            autoPlay: fields.slider.autoplay == true and fields.slider.autoplay_speed ? fields.slider.autoplay_speed,
            pauseAutoPlayOnHover: fields.slider.pause_on_hover,
            prevNextButtons: fields.slider.arrows,
            pageDots: fields.slider.dots,
            draggable: fields.slider.swipe,
            freeScroll: fields.slider.free_scroll,
            groupCells: fields.slider.group_cells,
            adaptiveHeight: fields.slider.adapt_height,
            rightToLeft: fields.slider.right_to_left,
            accessibility: fields.slider.keyboard,
            setGallerySize: fields.slider.gallery_size,
            resize: fields.slider.resize,
            cellAlign: fields.slider.alignment,
            slides: slideCount,
            flickity_carousel_classes: [
              slider_classes
            ],
            flickity_carousel_attributes: [
              slider_width or slider_min_width or slider_max_width or slider_margin_top or slider_margin_bottom or slider_margin_left or slider_margin_right or slider_padding_top or slider_padding_bottom or slider_padding_left or slider_padding_right ? 'style="' ~ slider_width ~ slider_min_width ~ slider_max_width ~ slider_margin_top ~ slider_margin_bottom ~ slider_margin_left ~ slider_margin_right ~ slider_padding_top ~ slider_padding_bottom ~ slider_padding_left ~ slider_padding_right ~ '"'
            ]
          } %}
            {% block slides %}
              {% for post in posts %}
                {# Categories #}
                {% if post.categories %}
                  {% set catArr = [] %}
                  {% for category in post.categories %}
                    {% set catArr = catArr | merge([category.name]) %}
                  {% endfor %}
                {% endif %}

                <div class="{{ slide_classes }}" {{ slide_attributes }} {{ catArr | length > 0 ? 'data-categories="' ~ catArr | sort | join(', ') | trim ~ '"' }}>
                  {% if fields.link_items == true %}
                    <a class="posts-loop--post" href="{{ post.link }}">
                  {% elseif fields.include_modals == true %}
                    <a class="posts-loop--post" href="javascript:void(0);" data-bs-toggle="modal" data-bs-target="#{{ post.slug }}">
                  {% else %}
                    <div class="posts-loop--post">
                  {% endif %}

                    {% for element in fields.posts_query_layout %}
                      {% if element.acf_fc_layout == 'featured_image' and post.thumbnail.src %}
                        {% include 'blocks/posts-loop/elements/_featured-image.twig' %}
                      {% elseif element.acf_fc_layout == 'post_title' and post.post_title %}
                        {% include 'blocks/posts-loop/elements/_post-title.twig' %}
                      {% elseif element.acf_fc_layout == 'post_excerpt' and post.post_excerpt %}
                        {% include 'blocks/posts-loop/elements/_post-excerpt.twig' %}
                      {% elseif element.acf_fc_layout == 'post_content' and post.content %}
                        {% include 'blocks/posts-loop/elements/_post-content.twig' %}
                      {% elseif element.acf_fc_layout == 'post_author' and post.authors %}
                        {% include 'blocks/posts-loop/elements/_post-author.twig' %}
                      {% elseif element.acf_fc_layout == 'post_date' and post.date %}
                        {% include 'blocks/posts-loop/elements/_post-date.twig' %}
                      {% elseif element.acf_fc_layout == 'post_modified' and post.modified_date %}
                        {% include 'blocks/posts-loop/elements/_post-modified.twig' %}
                      {% elseif element.acf_fc_layout == 'post_type' and post.type %}
                        {% include 'blocks/posts-loop/elements/_post-type.twig' %}
                      {% elseif element.acf_fc_layout == 'comment_count' and post.comment_count %}
                        {% include 'blocks/posts-loop/elements/_post-comment-count.twig' %}
                      {% elseif element.acf_fc_layout == 'terms' and post.terms is not empty %}
                        {% include 'blocks/posts-loop/elements/_post-terms.twig' %}
                      {% elseif element.acf_fc_layout == 'categories' and post.categories %}
                        {% include 'blocks/posts-loop/elements/_post-categories.twig' %}
                      {% elseif element.acf_fc_layout == 'tags' and post.tags %}
                        {% include 'blocks/posts-loop/elements/_post-tags.twig' %}
                      {% elseif element.acf_fc_layout == 'post_parent' and post.parent %}
                        {% include 'blocks/posts-loop/elements/_post-parent.twig' %}
                      {% elseif element.acf_fc_layout == 'children' and post.children %}
                        {% include 'blocks/posts-loop/elements/_post-children.twig' %}
                      {% elseif element.acf_fc_layout == 'link' and post.link %}
                        {% include 'blocks/posts-loop/elements/_post-link.twig' %}
                      {% endif %}
                    {% endfor %}

                  {% if fields.link_items == true or fields.include_modals %}
                    </a>
                  {% else %}
                    </div>
                  {% endif %}
                </div>
              {% endfor %}
            {% endblock slides %}
          {% endembed %}
        {% elseif fields.slider.slider == 'slick' %}
          {% embed '@molecules/slick-carousel/_slick-carousel.tpl.twig' with {
            slide_width: slide_width,
            slides_to_show: fields.slider.slides_to_show,
            slides_to_scroll: fields.slider.slides_to_scroll,
            infinite: fields.slider.loop,
            speed: fields.slider.animation_speed,
            autoplay: fields.slider.autoplay,
            autoplay_speed: fields.slider.autoplay_speed,
            pause_on_hover: fields.slider.pause_on_hover,
            pause_on_focus: fields.slider.pause_on_focus,
            css_ease: fields.slider.css_ease,
            ease: fields.slider.easing,
            arrows: fields.slider.arrows,
            dots: fields.slider.dots,
            draggable: fields.slider.swipe,
            swipe: fields.slider.swipe,
            touch_move: fields.slider.swipe,
            swipe_to_slide: fields.slider.swipe_to_slide,
            touch_threshold: fields.slider.drag_threshold,
            edge_friction: fields.slider.edge_friction,
            center_mode: fields.slider.center_mode,
            center_padding: fields.slider.center_padding,
            variable_width: fields.slider.variable_width,
            adaptive_height: fields.slider.adapt_height,
            rows: fields.slider.rows,
            slides_per_row: fields.slider.slides_per_row,
            vertical: fields.slider.vertical,
            vertical_swiping: fields.slider.vertical_swiping,
            rtl: fields.slider.right_to_left,
            accessibility: fields.slider.keyboard,
            focus_on_select: fields.slider.focus_on_select,
            lazy_load: fields.slider.lazy_load,
            fade: fields.slider.fade,
            use_css: fields.slider.use_css,
            use_transform: fields.slider.use_transform,
            edge_friction: fields.slider.edge_friction,
            touch_threshold: fields.slider.drag_threshold,
            easing: fields.slider.easing,
            css_ease: fields.slider.css_ease,
            asNavFor: fields.slider.as_nav_for,
            responsive: fields.slider.responsive,
            slides: slideCount,
            slick_carousel_classes: [
              slider_classes
            ],
            slick_carousel_attributes: [
              slider_width or slider_min_width or slider_max_width or slider_margin_top or slider_margin_bottom or slider_margin_left or slider_margin_right or slider_padding_top or slider_padding_bottom or slider_padding_left or slider_padding_right ? 'style="' ~ slider_width ~ slider_min_width ~ slider_max_width ~ slider_margin_top ~ slider_margin_bottom ~ slider_margin_left ~ slider_margin_right ~ slider_padding_top ~ slider_padding_bottom ~ slider_padding_left ~ slider_padding_right ~ '"'
            ]
          } %}
            {% block slides %}
              {% for post in posts %}
                {# Categories #}
                {% if post.categories %}
                  {% set catArr = [] %}
                  {% for category in post.categories %}
                    {% set catArr = catArr | merge([category.name]) %}
                  {% endfor %}
                {% endif %}

                <div class="{{ slide_classes }}" {{ slide_attributes }} {{ catArr | length > 0 ? 'data-categories="' ~ catArr | sort | join(', ') | trim ~ '"' }}>
                  {% if fields.link_items == true %}
                    <a class="posts-loop--post" href="{{ post.link }}">
                  {% elseif fields.include_modals == true %}
                    <a class="posts-loop--post" href="javascript:void(0);" data-bs-toggle="modal" data-bs-target="#{{ post.slug }}">
                  {% else %}
                    <div class="posts-loop--post">
                  {% endif %}

                    {% for element in fields.posts_query_layout %}
                      {% if element.acf_fc_layout == 'featured_image' and post.thumbnail.src %}
                        {% include 'blocks/posts-loop/elements/_featured-image.twig' %}
                      {% elseif element.acf_fc_layout == 'post_title' and post.post_title %}
                        {% include 'blocks/posts-loop/elements/_post-title.twig' %}
                      {% elseif element.acf_fc_layout == 'post_excerpt' and post.post_excerpt %}
                        {% include 'blocks/posts-loop/elements/_post-excerpt.twig' %}
                      {% elseif element.acf_fc_layout == 'post_content' and post.content %}
                        {% include 'blocks/posts-loop/elements/_post-content.twig' %}
                      {% elseif element.acf_fc_layout == 'post_author' and post.authors %}
                        {% include 'blocks/posts-loop/elements/_post-author.twig' %}
                      {% elseif element.acf_fc_layout == 'post_date' and post.date %}
                        {% include 'blocks/posts-loop/elements/_post-date.twig' %}
                      {% elseif element.acf_fc_layout == 'post_modified' and post.modified_date %}
                        {% include 'blocks/posts-loop/elements/_post-modified.twig' %}
                      {% elseif element.acf_fc_layout == 'post_type' and post.type %}
                        {% include 'blocks/posts-loop/elements/_post-type.twig' %}
                      {% elseif element.acf_fc_layout == 'comment_count' and post.comment_count %}
                        {% include 'blocks/posts-loop/elements/_post-comment-count.twig' %}
                      {% elseif element.acf_fc_layout == 'terms' and post.terms is not empty %}
                        {% include 'blocks/posts-loop/elements/_post-terms.twig' %}
                      {% elseif element.acf_fc_layout == 'categories' and post.categories %}
                        {% include 'blocks/posts-loop/elements/_post-categories.twig' %}
                      {% elseif element.acf_fc_layout == 'tags' and post.tags %}
                        {% include 'blocks/posts-loop/elements/_post-tags.twig' %}
                      {% elseif element.acf_fc_layout == 'post_parent' and post.parent %}
                        {% include 'blocks/posts-loop/elements/_post-parent.twig' %}
                      {% elseif element.acf_fc_layout == 'children' and post.children %}
                        {% include 'blocks/posts-loop/elements/_post-children.twig' %}
                      {% elseif element.acf_fc_layout == 'link' and post.link %}
                        {% include 'blocks/posts-loop/elements/_post-link.twig' %}
                      {% endif %}
                    {% endfor %}

                  {% if fields.link_items == true or fields.include_modals %}
                    </a>
                  {% else %}
                    </div>
                  {% endif %}
                </div>
              {% endfor %}
            {% endblock slides %}
          {% endembed %}
        {% endif %}

      {% endif %}

    {% endif %}