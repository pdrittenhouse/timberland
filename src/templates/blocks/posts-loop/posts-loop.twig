{#
/**
 * Block Name: Posts Loop
 *
 * This is the template that displays the  block.
 */
#}

{#{% if is_preview %}#}
{#<p>Some editor instructions here.</p>#}
{#{% endif %}#}

{#{{ block['className'] }}#}
{#{{ block['align'] ? 'align-' ~ block['align'] }}#}
{#{{ block['align_text']}}#}
{#{{ block['align_content'] }}#}
{#{{ block['full_height'] }}#}

{# Parent Block Data - ACF <= v.5.9 #}
{#{% set parent = function('get_parent_block', block['id'], block['name']) %}#}
{# Parent Block Data - ACF >= v.6.0 #}
{#{{ parent_block_data['data'] }}#}
{# Block Context #}
{#{{ block_context['acf/fields'] }}#}
{# ACF Options Fields #}
{#{{ options }}#}
{# ACF Fields #}
{#{{ fields }}#}
{# Site Data #}
{#{{ site }}#}
{# SASS Data #}
{#{{ sass_data }}#}
{# Post Data #}
{#{{ block_post }}#}
{# Query #}
{#{{ query }}#}
{# Query Posts #}
{#{{ query_posts }}#}

{# if ( $data['selection_type'] == 'query' && !empty($data['authors']['author']) && $data['authors']['include_author'] === 'inc' ) {
      $queryArgs['author__in'] = $data['authors']['author'];
    }
    if ( $data['selection_type'] == 'query' && !empty($data['authors']['author']) && $data['authors']['include_author'] === 'exc' ) {
      $queryArgs['author__not_in'] = $data['authors']['author'];
    }
 #}

{% set block_classes = block_classes|default([])|merge([
  'posts-loop',
  block['className']
]) | sort | join(' ') | trim %}

{% if fields.date.date_query.date_query is not empty %}
  {% set dateQueryArr = {} %}
  {% set dateQueryArgs = {} %}
	{% for date_query in fields.date.date_query.date_query %}
		{% if date_query.year is not empty %}
			{% set dateQueryArgs = dateQueryArgs|merge({ 'year': date_query.year|e }) %}
		{% endif %}
    {% if date_query.month is not empty %}
      {% set dateQueryArgs = dateQueryArgs|merge({ 'monthnum': date_query.month|e }) %}
    {% endif %}
    {% if date_query.week is not empty %}
      {% set dateQueryArgs = dateQueryArgs|merge({ 'w': date_query.week|e }) %}
    {% endif %}
    {% if date_query.day is not empty %}
      {% set dateQueryArgs = dateQueryArgs|merge({ 'day': date_query.day|e }) %}
    {% endif %}
    {% if date_query.hour is not empty %}
      {% set dateQueryArgs = dateQueryArgs|merge({ 'hour': date_query.hour|e }) %}
    {% endif %}
    {% if date_query.minute is not empty %}
      {% set dateQueryArgs = dateQueryArgs|merge({ 'minute': date_query.minute|e }) %}
    {% endif %}
    {% if date_query.second is not empty %}
      {% set dateQueryArgs = dateQueryArgs|merge({ 'second': date_query.second|e }) %}
    {% endif %}

		{% if date_query.after.type %}
			{% set dateQueryArgs = dateQueryArgs|merge({ 'after': date_query.after.after }) %}
		{% else %}
			{% set dateQueryAfterArgs = {} %}
			{% if date_query.after.year is not empty %}
				{% set dateQueryAfterArgs = dateQueryAfterArgs|merge({ 'year': date_query.after.year }) %}
			{% endif %}
      {% if date_query.after.month is not empty %}
				{% set dateQueryAfterArgs = dateQueryAfterArgs|merge({ 'month': date_query.after.month }) %}
			{% endif %}
      {% if date_query.after.day is not empty %}
				{% set dateQueryAfterArgs = dateQueryAfterArgs|merge({ 'day': date_query.after.day }) %}
			{% endif %}
			{% if date_query.after.year or date_query.after.month or date_query.after.day %}
				{% set dateQueryArgs = dateQueryArgs|merge({'after': dateQueryAfterArgs}) %}
			{% endif %}
		{% endif %}

		{% if date_query.before.type %}
			{% set dateQueryArgs = dateQueryArgs|merge({ 'before': date_query.before.before }) %}
		{% else %}
			{% set dateQueryBeforeArgs = {} %}
			{% if date_query.before.year is not empty %}
				{% set dateQueryBeforeArgs = dateQueryBeforeArgs|merge({ 'year': date_query.before.year }) %}
			{% endif %}
      {% if date_query.before.month is not empty %}
				{% set dateQueryBeforeArgs = dateQueryBeforeArgs|merge({ 'month': date_query.before.month }) %}
			{% endif %}
      {% if date_query.before.day is not empty %}
				{% set dateQueryBeforeArgs = dateQueryBeforeArgs|merge({ 'day': date_query.before.day }) %}
			{% endif %}
			{% if date_query.before.year or date_query.before.month or date_query.before.day %}
				{% set dateQueryArgs = dateQueryArgs|merge({'before': dateQueryBeforeArgs}) %}
			{% endif %}
		{% endif %}

		{% set dateQueryArr = dateQueryArr|merge([dateQueryArgs]) %}
	{% endfor %}

	{% if fields.date.date_query.relation %}
		{% set dateQueryArr = dateQueryArr|merge({ 'relation': fields.date.date_query.relation }) %}
	{% endif %}
	{% if fields.date.date_query.compare %}
		{% set dateQueryArr = dateQueryArr|merge({ 'compare': fields.date.date_query.compare }) %}
	{% endif %}
	{% if fields.date.date_query.column %}
		{% set dateQueryArr = dateQueryArr|merge({ 'column': fields.date.date_query.column }) %}
	{% endif %}
	{% if fields.date.date_query.inclusive %}
		{% set dateQueryArr = dateQueryArr|merge({ 'inclusive': fields.date.date_query.inclusive }) %}
	{% endif %}
{% endif %}

{% if fields.custom_fields.meta_query.meta_query is not empty %}

  {% set metaQueryArr = {} %}
  {% set metaQueryArgs = {} %}

  {% for meta_query in fields.custom_fields.meta_query.meta_query %}
    {% if meta_query.key is not empty %}
      {% set metaQueryArgs = metaQueryArgs|merge({'key': meta_query.key}) %}
    {% endif %}
    {% if meta_query.type is not empty %}
      {% set metaQueryArgs = metaQueryArgs|merge({'type': meta_query.type}) %}
    {% endif %}
    {% if meta_query.compare is not empty %}
      {% set metaQueryArgs = metaQueryArgs|merge({'compare': meta_query.compare}) %}
    {% endif %}
    {% if meta_query.compare in ['IN', 'NOT IN', 'BETWEEN', 'NOT BETWEEN'] and meta_query.values is not empty %}
      {% set values = [] %}
      {% for value in meta_query.values %}
        {% set values = values|merge([value]) %}
      {% endfor %}
      {% set metaQueryArgs = metaQueryArgs|merge({'value': values}) %}
    {% elseif meta_query.value is not empty %}
      {% set metaQueryArgs = metaQueryArgs|merge({'value': meta_query.value}) %}
    {% endif %}
  {% endfor %}
  {% if fields.custom_fields.meta_query.relation is not empty %}
    {% set metaQueryArr = metaQueryArr|merge({'relation':fields.custom_fields.meta_query.relation}) %}
  {% endif %}
{% endif %}

{% if fields.comment_count.value %}
	{% set comment_count = {
    'value': fields.comment_count.value,
    'compare': fields.comment_count.compare
  } %}
{% endif %}

{% set taxonomy_query = {
  'relation': fields.taxonomies.relation,
} %}

{% for tax_query in fields.taxonomies.taxonomies %}
  {% set tax_terms = [] %}

  {% for terms in tax_query.terms %}
    {% set tax_terms = tax_terms|default([])|merge([terms.term]) %}
  {% endfor %}

  {% set taxonomy = tax_query | filter((v, k) => k != 'terms') | merge({'terms': tax_terms}) %}

  {% set taxonomy_query = taxonomy_query|merge([taxonomy]) %}

{% endfor %}

{% set block_attributes = block_attributes|default([])|merge([
  'data-pattern="' ~ fields.pattern ~ '"',
  parent_block_data is not empty ? 'data-parent="' ~ parent_block_data|json_encode()|replace({'"': "'"}) ~ '"',
  fields.include_load_more == true and fields.load_more.number_of_posts ? 'data-load-posts="' ~ fields.load_more.number_of_posts ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') ? 'data-pattern-path="@molecules/card/"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.card is not empty ? 'data-card="' ~ fields.card|json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.link_items == true ? 'data-link-items="' ~ fields.link_items ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.elements is not empty ? 'data-elements="' ~ fields.elements|json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_excerpt is not empty ? 'data-element-excerpt="' ~ fields.element_excerpt|json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_author is not empty ? 'data-element-author="' ~ fields.element_author | json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_date is not empty ? 'data-element-date="' ~ fields.element_date | json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_modified is not empty ? 'data-element-modified="' ~ fields.element_modified | json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_post_parent is not empty ? 'data-element-post-parent="' ~ fields.element_post_parent | json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_children is not empty ? 'data-element-children="' ~ fields.element_children | json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_post_type is not empty ? 'data-element-post-type="' ~ fields.element_post_type | json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_comment_count is not empty ? 'data-element-comment-count="' ~ fields.element_comment_count | json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_link is not empty ? 'data-element-link="' ~ fields.element_link | json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_terms is not empty ? 'data-element-terms="' ~ fields.element_terms | json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_categories is not empty ? 'data-element-categories="' ~ fields.element_categories | json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.element_tags is not empty ? 'data-element-tags="' ~ fields.element_tags | json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.card_footer_layout != false ? 'data-card-footer-layout="' ~ fields.card_footer_layout|json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.card_back_layout != false ? 'data-card-back-layout="' ~ fields.card_back_layout|json_encode()|replace({'"': "'"}) ~ '"',
  (fields.pattern == 'card' or fields.pattern == 'card-grid' or fields.pattern == 'carousel') and fields.card_featured_image ? 'data-card-featured-image="' ~ fields.card_featured_image ~ '"',
  fields.selection_type == 'query' and fields.post_type is not empty ? 'data-post-type="' ~ fields.post_type|json_encode()|replace({'"': "'"}) ~ '"',
  fields.selection_type == 'query' and fields.sort_order is not empty ? 'data-order="' ~ fields.sort_order.order ~ '"',
  fields.selection_type == 'query' and fields.sort_order is not empty ? 'data-order-by="' ~ fields.sort_order.order_by ~ '"',
  fields.selection_type == 'query' and fields.ignore_sticky_posts == true ? 'data-ignore-sticky-posts="true"' : 'data-ignore-sticky-posts="false"',
  fields.selection_type == 'query' and not function('is_archive') and fields.pagination is not empty and fields.pagination.posts_per_page is not empty ? 'data-posts-per-page="' ~ fields.pagination.posts_per_page ~ '"' : fields.pagination is not empty and fields.pagination.posts_per_page is not empty ? 'data-posts-per-archive-page="' ~ fields.pagination.posts_per_page ~ '"',
  fields.selection_type == 'query' and fields.pagination is not empty and fields.pagination.nopaging == true ? 'data-nopaging="true"' : 'data-nopaging="false"',
  fields.selection_type == 'query' and fields.pagination is not empty and fields.pagination.offset is not empty ? 'data-offset="' ~ fields.pagination.offset | number_format ~ '"',
  fields.pagination and fields.pagination.page is not empty and not function('is_page') ? 'data-paged="1"' : 'data-paged="' ~ fields.pagination.page ~ '"',
  fields.selection_type == 'query' and fields.post_parent.parent is not empty and fields.post_parent.include_parent == 'inc' ? 'data-post-parent-in="' ~ fields.post_parent.parent|json_encode()|replace({'"': "'"}) ~ '"',
  fields.selection_type == 'query' and fields.post_parent.parent is not empty and fields.post_parent.include_parent == 'exc' ? 'data-post-parent-not-in="' ~ fields.post_parent.parent|json_encode()|replace({'"': "'"}) ~ '"',
  fields.selection_type == 'query' and fields.date.year is not empty ? 'data-year="' ~ fields.date.year ~ '"',
  fields.selection_type == 'query' and fields.date.monthnum is not empty ? 'data-monthnum="' ~ fields.date.monthnum ~ '"',
  fields.selection_type == 'query' and fields.date.w is not empty ? 'data-w="' ~ fields.date.w ~ '"',
  fields.selection_type == 'query' and fields.date.day is not empty ? 'data-day="' ~ fields.date.day ~ '"',
  fields.selection_type == 'query' and fields.date.hour is not empty ? 'data-hour="' ~ fields.date.hour ~ '"',
  fields.selection_type == 'query' and fields.date.minute is not empty ? 'data-minute="' ~ fields.date.minute ~ '"',
  fields.selection_type == 'query' and fields.date.second is not empty ? 'data-second="' ~ fields.date.second ~ '"',
  fields.selection_type == 'query' and fields.date.m is not empty ? 'data-m="' ~ fields.date.m ~ '"',
  fields.selection_type == 'query' and dateQueryArr is not empty ? 'data-date-query="' ~ dateQueryArr|json_encode()|replace({'"': "'"}) ~ '"',
  fields.selection_type == 'query' and fields.custom_fields.meta_key is not empty ? 'data-meta-key="' ~ fields.custom_fields.meta_key ~ '"' : '',
  fields.selection_type == 'query' and fields.custom_fields.meta_value is not empty ? 'data-meta-value="' ~ fields.custom_fields.meta_value ~ '"' : '',
  fields.selection_type == 'query' and fields.custom_fields.meta_value_num is not empty ? 'data-meta-value-num="' ~ fields.custom_fields.meta_value_num ~ '"' : '',
  fields.selection_type == 'query' and fields.custom_fields.meta_key is not empty and fields.custom_fields.meta_compare is not empty ? 'data-meta-compare="' ~ fields.custom_fields.meta_compare ~ '"' : '',
  fields.selection_type == 'query' and fields.custom_fields.meta_query.meta_query is not empty ? 'data-meta-query="' ~ metaQueryArgs|json_encode()|replace({'"': "'"}) ~ '"',
  fields.selection_type == 'query' and fields.taxonomies.taxonomies is not empty ? 'data-tax-query="' ~ taxonomy_query|json_encode()|replace({'"': "'"}) ~ '"' : '',
  fields.selection_type == 'query' and fields.categories.category is not empty and fields.categories.include_cats == 'inc' ? 'data-category-in="' ~ fields.categories.category|json_encode()|replace({'"': "'"}) ~ '"' : '',
  fields.selection_type == 'query' and fields.categories.category is not empty and fields.categories.include_cats == 'exc' ? 'data-category-not-in="' ~ fields.categories.category|json_encode()|replace({'"': "'"}) ~ '"' : '',
  fields.selection_type == 'query' and fields.tags.tags is not empty and fields.tags.include_tags == 'inc' ? 'data-tag-in="' ~ fields.tags.tags|json_encode()|replace({'"': "'"}) ~ '"' : '',
  fields.selection_type == 'query' and fields.tags.tags is not empty and fields.tags.include_tags == 'exc' ? 'data-tag-not-in="' ~ fields.tags.tags|json_encode()|replace({'"': "'"}) ~ '"' : '',
  fields.selection_type == 'query' and fields.authors.author is not empty and fields.authors.include_author == 'inc' ? 'data-author-in="' ~ fields.authors.author|json_encode()|replace({'"': "'"}) ~ '"' : '',
  fields.selection_type == 'query' and fields.authors.author is not empty and fields.authors.include_author == 'exc' ? 'data-author-not-in="' ~ fields.authors.author|json_encode()|replace({'"': "'"}) ~ '"' : '',
  fields.selection_type == 'query' and fields.comment_count.value ? 'data-comment-count="' ~ comment_count|json_encode()|replace({'"': "'"}) ~ '"',
  fields.selection_type == 'query' and fields.post_status is not empty and fields.post_status.all == true ? 'data-post-status="any"' : fields.selection_type == 'query' and fields.post_status.status is not empty ? 'data-post-status="' ~ fields.post_status.status|json_encode()|replace({'"': "'"}) ~ '"' : '',
  fields.selection_type == 'query' and fields.password is not empty and fields.password.has_password == true ? 'data-has-password="true"' : '',
  fields.selection_type == 'query' and fields.password.post_password is not empty ? 'data-post-password="' ~ fields.password.post_password ~ '"' : '',
  fields.selection_type == 'query' and fields.post_mime_type is not empty ? 'data-post-mime-type="' ~ fields.post_mime_type|json_encode()|replace({'"': "'"}) ~ '"' : '',
  fields.selection_type == 'query' and fields.permissions is not null ? 'data-perm="' ~ fields.permissions ~ '"' : '',
  fields.selection_type == 'query' and fields.search is not empty and fields.search.s == true ? 'data-s="' ~ function('get_search_query') ~ '"' : '',
  fields.selection_type == 'query' and fields.search is not empty and fields.search.exact == true ? 'data-exact="true"' : '',
  fields.selection_type == 'query' and fields.search is not empty and fields.search.sentence == true ? 'data-sentence="true"' : '',
  fields.selection_type == 'select' ? 'data-post-in="' ~ fields.select_posts|json_encode()|replace({'"': "'"}) ~ '"' : '',
  fields.pattern == 'card-grid' ? 'data-grid-type="' ~ fields.card_grid.type ~ '"',
]) | sort | join(' ') | trim %}

<div class="{{ block_classes }}" {{ block_attributes }}>
  <div class="posts-loop--posts-wrapper">
    {# No Pattern #}
    {% if fields.pattern == 'none' %}
      {% include 'blocks/posts-loop/_posts-loop~none.twig' %}
    {% endif %}

    {# Card #}
    {% if fields.pattern == 'card' %}
      {% include 'blocks/posts-loop/_posts-loop~card.twig' %}
    {% endif %}

    {# Card Grid #}
    {% if fields.pattern == 'card-grid' %}
      {% include 'blocks/posts-loop/_posts-loop~card-grid.twig' %}
    {% endif %}

    {# Carousel #}
    {% if fields.pattern == 'carousel' %}
      {% include 'blocks/posts-loop/_posts-loop~carousel.twig' %}
    {% endif %}

    {# Feature #}
    {% if fields.pattern == 'feature' %}
      {% include 'blocks/posts-loop/_posts-loop~feature.twig' %}
    {% endif %}

    {# Promo #}
    {% if fields.pattern == 'promo' %}
      {% include 'blocks/posts-loop/_posts-loop~promo.twig' %}
    {% endif %}

    {# List #}
    {% if fields.pattern == 'list' %}
      {% include 'blocks/posts-loop/_posts-loop~list.twig' %}
    {% endif %}
  </div>

  {% if fields.include_modals == true %}
    {% include 'blocks/posts-loop/_posts-loop~modals.twig' %}
  {% endif %}

  {% if fields.include_load_more == true and fields.include_pagination != true %}
    {% include 'blocks/posts-loop/_posts-loop~load-more.twig' %}
  {% endif %}

  {% if fields.include_pagination == true and fields.include_load_more != true %}
    {% include 'blocks/posts-loop/_posts-loop~pagination.twig' %}
  {% endif %}

</div>
